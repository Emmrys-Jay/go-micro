version: "3"
services:
  broker-service:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    restart: always
    ports:
      - "8080:8080"
    deploy:
      mode: replicated
      replicas: 1
    container_name: broker-service

  authentication-service:
    build: 
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: always
    ports:
      - "8081:8081"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres-default port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
    container_name: authentication-service

  listener-service:
    build:
      context: ./../listener-service
      dockerfile: ./../listener-service/listener-service.dockerfile
    deploy:
      mode: replicated
      replicas: 1
    container_name: listener-service

  postgres: 
    image: "postgres:14.2"
    ports:
      - "5434:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment: 
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - /db-data/postgres:/var/lib/postgresql/data
    container_name: postgres-default

  mongo: 
    image: "mongo:4.2.16-bionic"
    ports:
      - "27010:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db
    container_name: mongo-default

  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    container_name: logger-service

  mailer-service:
    build:
      context: ./../mail-service
      dockerfile: ./../mail-service/mail-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "John Smith"
      FROM_ADDRESS: john.smith@example.com
    container_name: mailer-service

  mailhog: 
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"
    container_name: mailhog

  rabbitmq:
    image: 'rabbitmq:3.11-alpine'
    ports:
      - "5672:5672"
    deploy: 
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/
    container_name: rabbitmq
